%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.13.0.564 (R2011b). Operating System: Microsoft Windows 7.
%%Title: data\tiny-result2.ps
%%CreationDate: 03/26/2014  11:19:40
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    77   215   542   602
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    77   215   542   602
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0204 7344 csm

  731   110  5574  4650 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6913 5185 rf
6 w
0 -4225 2313 0 0 4225 899 389 4 MP
PP
-2313 0 0 -4225 2313 0 0 4225 899 389 5 MP stroke
gs 899 389 2314 4226 rc
/mwscm { [/Indexed /DeviceRGB 63
  <
    00008f 00009f 0000af 0000bf 0000cf 0000df 0000ef 0000ff 000fff 001fff 
    002fff 003fff 004fff 005fff 006fff 007fff 008fff 009fff 00afff 00bfff 
    00cfff 00dfff 00efff 00ffff 0fffef 1fffdf 2fffcf 3fffbf 4fffaf 5fff9f 
    6fff8f 7fff7f 8fff6f 9fff5f afff4f bfff3f cfff2f dfff1f efff0f ffff00 
    ffef00 ffdf00 ffcf00 ffbf00 ffaf00 ff9f00 ff8f00 ff7f00 ff6f00 ff5f00 
    ff4f00 ff3f00 ff2f00 ff1f00 ff0f00 ff0000 ef0000 df0000 cf0000 bf0000 
    af0000 9f0000 8f0000 7f0000 
  >
] setcolorspace } bdef mwscm
gs np 899 389 mt 0 4225 rl 2313 0 rl 0 -4225 rl cp c np
[2313 0 0 4225 899 389] cc
<< % Image dictionary
  /ImageType 1
  /Width 68 /Height 14
  /BitsPerComponent 8
  /Decode [0 255]
  /ImageMatrix [68.000000 0 0 14.000000 0 0]
  /DataSource currentfile
  /ASCII85Decode filter
  /RunLengthDecode filter
>>
image
>8.bb'Fd):'GD,h&.oNc&d]6c',2*B%MKBd$kj9e&Io!Y'GD/o4;/>@&eklk&eG]a&Ju&p'-%Z%((q/f
',;8q#nmsd&/5`g%hoX='bh8n',)&m&ekum&H37B4;@c+(_RDo&J>Zh%h0!Z&NUU<&eYih().Gq',(9U
,n_XD&J>]j&/,Qf&J,Te&/,Zj4;&8='GD/l'GD/n%1Nsb'KR!.',M5p&ebom&/#Wc&J[JA',2)n((_8r
(D-QX%hK[.&.oKf%ho]g4;&>A')`IG&ebumr=^eF%hfQf',(ul&ebih&ebrm3YN2>'+toh&JGci&J>co
'.=Y8'c.Ys'GVB&(CpEY"V;@R'bqG]'+$ib4qe&5',2,orY-gq'G(sA5!BM[',1ul'Ftij%1<a^4?l"D
$PF6d'G(ur)&!;a%k]Ul&-2\D!YZ:]r=f;H'GCBY#Wrb7',2/p'GLH[1D:B7'GE\F',(ul'GD/o'GM2n
',2*D'GDAu'GD2r'G_K$'+trm1_C?6&e,Kb%i%8<&H31C'Fk`e'E&IL&J@/8&eYcf'Fb`T&c`OC%j)HJ
%hTEf&JPZe'+tog&e>Nj0b4j-&ePrg&.oNe4r!u/rY#;F&cE@J'GM0@&ekugrY#\N&J,Qg&ebom3ti8?
q\'n]&/,`l',`;8(D7Aq'c7St'b_BH'+bfa'+bfQ'*8aZ4T#ir%1EXY%M\mU5mmiZ'+bcc$jd1P',2&m
'+kia2B*,=$P<aR%i#`j(D[Vl!u)F_'GD,l&j-gA&ebok&ebrl&ebil',*PE&J5]T'Ef'^&.fHQ&d1?3
&eYlW')iOj%hTEd&eQc7&J#Kd&eGfk3YN/8'bCrk'+YK`&e5Kd&j-g@&JY-VG7>2u&ebci3ti;?&eP`j
'+YTd&.]Ec'Isk6'-nD2&KM>l%MBHi%hTKg',)!?4VAG=%29Nk'+PTf'+kll4Zs>h%1s6e'GD)k'+tlj
'g=ep'+YQd'GM2n%hB-_'H&>M'GqAm*u#J)+qYJ$&J#Nd%h]Nj'E/RP4q/,;'+kfi&ebrn')iPX&j$R9
',2#i%hTBe'+kfh&eR8:&J>]f%h]Ea&f;8n&J>^,%hKC<&/,`h&J5Zg'+YT`',)&o4VAGC&JGZg',2,m
%MT?b'Km*D'+tog',2,o'+Ych'Gi28*#95$%29Tt%hfQj'7^
~>
gr
gr

0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1868  294 mt 
(Scores) s
4 w
DO
SO
6 w
 899 4614 mt 3212 4614 L
 899  389 mt 3212  389 L
3212  389 mt 3212 4614 L
 899  389 mt  899 4614 L
 899 4614 mt 3212 4614 L
 899  389 mt  899 4614 L
1222 4614 mt 1222 4571 L
1222  389 mt 1222  431 L
1156 4759 mt 
(10) s
1562 4614 mt 1562 4571 L
1562  389 mt 1562  431 L
1496 4759 mt 
(20) s
1902 4614 mt 1902 4571 L
1902  389 mt 1902  431 L
1836 4759 mt 
(30) s
2242 4614 mt 2242 4571 L
2242  389 mt 2242  431 L
2176 4759 mt 
(40) s
2582 4614 mt 2582 4571 L
2582  389 mt 2582  431 L
2516 4759 mt 
(50) s
2922 4614 mt 2922 4571 L
2922  389 mt 2922  431 L
2856 4759 mt 
(60) s
 899  539 mt  941  539 L
3212  539 mt 3169  539 L
 798  583 mt 
(1) s
 899  841 mt  941  841 L
3212  841 mt 3169  841 L
 798  885 mt 
(2) s
 899 1143 mt  941 1143 L
3212 1143 mt 3169 1143 L
 798 1187 mt 
(3) s
 899 1445 mt  941 1445 L
3212 1445 mt 3169 1445 L
 798 1489 mt 
(4) s
 899 1747 mt  941 1747 L
3212 1747 mt 3169 1747 L
 798 1791 mt 
(5) s
 899 2048 mt  941 2048 L
3212 2048 mt 3169 2048 L
 798 2092 mt 
(6) s
 899 2350 mt  941 2350 L
3212 2350 mt 3169 2350 L
 798 2394 mt 
(7) s
 899 2652 mt  941 2652 L
3212 2652 mt 3169 2652 L
 798 2696 mt 
(8) s
 899 2954 mt  941 2954 L
3212 2954 mt 3169 2954 L
 798 2998 mt 
(9) s
 899 3255 mt  941 3255 L
3212 3255 mt 3169 3255 L
 731 3299 mt 
(10) s
 899 3557 mt  941 3557 L
3212 3557 mt 3169 3557 L
 731 3601 mt 
(11) s
 899 3859 mt  941 3859 L
3212 3859 mt 3169 3859 L
 731 3903 mt 
(12) s
 899 4161 mt  941 4161 L
3212 4161 mt 3169 4161 L
 731 4205 mt 
(13) s
 899 4463 mt  941 4463 L
3212 4463 mt 3169 4463 L
 731 4507 mt 
(14) s
 899 4614 mt 3212 4614 L
 899  389 mt 3212  389 L
3212  389 mt 3212 4614 L
 899  389 mt  899 4614 L
1 sg
0 -4225 2313 0 0 4225 3942 389 4 MP
PP
-2313 0 0 -4225 2313 0 0 4225 3942 389 5 MP stroke
gs 3942 389 2314 4226 rc
/mwscm { [/Indexed /DeviceRGB 63
  <
    00008f 00009f 0000af 0000bf 0000cf 0000df 0000ef 0000ff 000fff 001fff 
    002fff 003fff 004fff 005fff 006fff 007fff 008fff 009fff 00afff 00bfff 
    00cfff 00dfff 00efff 00ffff 0fffef 1fffdf 2fffcf 3fffbf 4fffaf 5fff9f 
    6fff8f 7fff7f 8fff6f 9fff5f afff4f bfff3f cfff2f dfff1f efff0f ffff00 
    ffef00 ffdf00 ffcf00 ffbf00 ffaf00 ff9f00 ff8f00 ff7f00 ff6f00 ff5f00 
    ff4f00 ff3f00 ff2f00 ff1f00 ff0f00 ff0000 ef0000 df0000 cf0000 bf0000 
    af0000 9f0000 8f0000 7f0000 
  >
] setcolorspace } bdef mwscm
gs np 3942 389 mt 0 4225 rl 2313 0 rl 0 -4225 rl cp c np
[2313 0 0 4225 3942 389] cc
<< % Image dictionary
  /ImageType 1
  /Width 14 /Height 14
  /BitsPerComponent 8
  /Decode [0 255]
  /ImageMatrix [14.000000 0 0 14.000000 0 0]
  /DataSource currentfile
  /ASCII85Decode filter
  /RunLengthDecode filter
>>
image
pAb1.r;Zg4o)Jb*o)Jb*o)JbTo)Jb*o)Jb*o)Jb*o)Jb*o)Jb*o)Jb*o)Jb?o)Jb*o)Jb*J,
~>
gr
gr

0 sg
4114  294 mt 
(Confusion matrix \(94.12 % accuracy\)) s
4 w
DO
SO
6 w
3942 4614 mt 6255 4614 L
3942  389 mt 6255  389 L
6255  389 mt 6255 4614 L
3942  389 mt 3942 4614 L
3942 4614 mt 6255 4614 L
3942  389 mt 3942 4614 L
4189 4614 mt 4189 4571 L
4189  389 mt 4189  431 L
4156 4759 mt 
(2) s
4520 4614 mt 4520 4571 L
4520  389 mt 4520  431 L
4487 4759 mt 
(4) s
4850 4614 mt 4850 4571 L
4850  389 mt 4850  431 L
4817 4759 mt 
(6) s
5181 4614 mt 5181 4571 L
5181  389 mt 5181  431 L
5148 4759 mt 
(8) s
5511 4614 mt 5511 4571 L
5511  389 mt 5511  431 L
5445 4759 mt 
(10) s
5841 4614 mt 5841 4571 L
5841  389 mt 5841  431 L
5775 4759 mt 
(12) s
6172 4614 mt 6172 4571 L
6172  389 mt 6172  431 L
6106 4759 mt 
(14) s
3942  841 mt 3984  841 L
6255  841 mt 6212  841 L
3841  885 mt 
(2) s
3942 1445 mt 3984 1445 L
6255 1445 mt 6212 1445 L
3841 1489 mt 
(4) s
3942 2048 mt 3984 2048 L
6255 2048 mt 6212 2048 L
3841 2092 mt 
(6) s
3942 2652 mt 3984 2652 L
6255 2652 mt 6212 2652 L
3841 2696 mt 
(8) s
3942 3255 mt 3984 3255 L
6255 3255 mt 6212 3255 L
3774 3299 mt 
(10) s
3942 3859 mt 3984 3859 L
6255 3859 mt 6212 3859 L
3774 3903 mt 
(12) s
3942 4463 mt 3984 4463 L
6255 4463 mt 6212 4463 L
3774 4507 mt 
(14) s
3942 4614 mt 6255 4614 L
3942  389 mt 6255  389 L
6255  389 mt 6255 4614 L
3942  389 mt 3942 4614 L

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
